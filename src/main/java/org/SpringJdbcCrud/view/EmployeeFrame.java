/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.SpringJdbcCrud.view;

import java.util.ArrayList;

import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.xml.crypto.Data;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;

import com.SpringJdbcCrud.Dao.DatabaseOperationalClass;
import com.SpringJdbcCrud.Entity.Employee;
import javax.swing.JOptionPane;

/**
 *
 * @author OM
 */
public class EmployeeFrame extends javax.swing.JFrame {
	
	@Autowired
	@Qualifier("dbOb")
	DatabaseOperationalClass dbob;
	private int id = 0;

    /**
     * Creates new form EmployeeFrame
     */
    public EmployeeFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        ageTextField = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        phoneTextField = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        cityTextField = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        insertButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        employeeTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setLayout(new java.awt.GridLayout(2, 0, 0, 10));

        jPanel2.setLayout(new java.awt.GridLayout(6, 1, 10, 10));

        jPanel4.setLayout(new java.awt.GridLayout(1, 2, 10, 10));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("NAME:");
        jPanel4.add(jLabel1);
        jPanel4.add(nameTextField);

        jPanel2.add(jPanel4);

        jPanel5.setLayout(new java.awt.GridLayout(1, 2, 10, 10));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("EMAIL:");
        jPanel5.add(jLabel2);
        jPanel5.add(emailTextField);

        jPanel2.add(jPanel5);

        jPanel6.setLayout(new java.awt.GridLayout(1, 2, 10, 10));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("AGE:");
        jPanel6.add(jLabel3);
        jPanel6.add(ageTextField);

        jPanel2.add(jPanel6);

        jPanel7.setLayout(new java.awt.GridLayout(1, 2, 10, 10));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("PHONE:");
        jPanel7.add(jLabel4);
        jPanel7.add(phoneTextField);

        jPanel2.add(jPanel7);

        jPanel9.setLayout(new java.awt.GridLayout(1, 2, 10, 10));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("CITY");
        jPanel9.add(jLabel5);
        jPanel9.add(cityTextField);

        jPanel2.add(jPanel9);

        jPanel8.setLayout(new java.awt.GridLayout(1, 4, 10, 10));

        insertButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        insertButton.setText("INSERT");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });
        jPanel8.add(insertButton);

        updateButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        updateButton.setText("UPDATE");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        jPanel8.add(updateButton);

        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        deleteButton.setText("DELETE");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        jPanel8.add(deleteButton);

        resetButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        resetButton.setText("RESET");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        jPanel8.add(resetButton);

        jPanel2.add(jPanel8);

        jPanel1.add(jPanel2);

        jPanel3.setLayout(new java.awt.GridLayout(1, 1));

        employeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        employeeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeeTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(employeeTable);

        jPanel3.add(jScrollPane1);

        jPanel1.add(jPanel3);

        getContentPane().add(jPanel1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void employeeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeTableMouseClicked
        // TODO add your handling code here:
        
         id = Integer.parseInt(employeeTable.getValueAt(employeeTable.getSelectedRow(), 0).toString());
        ArrayList<Employee> empList = new ArrayList();
        empList = dbob.typeCastToEmployee(dbob.getEmployeeList());
        Employee emp = empList.stream().filter(p->p.getId() == id).findAny().orElse(null);
        nameTextField.setText(emp.getName());
        emailTextField.setText(emp.getEmail());
        phoneTextField.setText(emp.getPhone()+"");
        ageTextField.setText(emp.getAge()+"");
        cityTextField.setText(emp.getCity());
        
        
    }//GEN-LAST:event_employeeTableMouseClicked

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        // TODO add your handling code here:
        String name = nameTextField.getText().toUpperCase();
        String email = emailTextField.getText();
        String age = ageTextField.getText();
        String phone = phoneTextField.getText();
        String city = cityTextField.getText().toUpperCase();
        if(name.isEmpty() || email.isEmpty() || age.isEmpty() || phone.isEmpty() || city.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Invalid Data, all the fields must be filled" , "Person CRUD", JOptionPane.ERROR_MESSAGE);
            resetData();
            
        }
        else{
            Employee emp = new Employee();
           emp.setName(name);
           emp.setEmail(email);
           emp.setAge(Integer.parseInt(age));
           emp.setPhone(Long.parseLong(phone));
           emp.setCity(city);
           emp.setStatus(1);
           dbob.insert(emp);
           JOptionPane.showMessageDialog(this, "Record Inserted Succesfully!!","Person CRUD",JOptionPane.INFORMATION_MESSAGE);
           setTableData();
           resetData();
        }
    }//GEN-LAST:event_insertButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        String name = nameTextField.getText().toUpperCase();
        String email = emailTextField.getText();
        String age = ageTextField.getText();
        String phone = phoneTextField.getText();
        String city = cityTextField.getText().toUpperCase();
        
        if(!(name.isEmpty() || email.isEmpty() || age.isEmpty() || phone.isEmpty() || city.isEmpty()))
        {
        	Employee employee = new Employee();
        	employee.setId(id);
        	employee.setName(name);
        	employee.setEmail(email);
        	employee.setAge(Integer.parseInt(age));
        	employee.setPhone(Long.parseLong(phone));
        	employee.setCity(city);
        	
        	dbob.update(employee);
        	JOptionPane.showMessageDialog(this, "Data updated Succesfully!!" , "Person CRUD" ,JOptionPane.INFORMATION_MESSAGE);
        	setTableData();
        	resetData();
        	
        	
        }
        else
            JOptionPane.showMessageDialog(this, "Please select record to update" ,"Person CRUD" , JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
         String name = nameTextField.getText().toUpperCase();
        String email = emailTextField.getText();
        String age = ageTextField.getText();
        String phone = phoneTextField.getText();
        String city = cityTextField.getText().toUpperCase();
        
        if(!(name.isEmpty() || email.isEmpty() || age.isEmpty() || phone.isEmpty() || city.isEmpty()))
        {
            dbob.delete(id);
            JOptionPane.showMessageDialog(this, "Data Deleted Succesfully!!" , "Person CRUD" ,JOptionPane.INFORMATION_MESSAGE);
            setTableData();
        	resetData();
            
        }else
            JOptionPane.showMessageDialog(this, "Please select record to Delete" ,"Person CRUD" , JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        resetData();
    }//GEN-LAST:event_resetButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ageTextField;
    private javax.swing.JTextField cityTextField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JTable employeeTable;
    private javax.swing.JButton insertButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField phoneTextField;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables

    public void setTableData(){
    	ArrayList<Employee> employees = new ArrayList<Employee>();
        employees = dbob.typeCastToEmployee(dbob.getEmployeeList());
        
        String [] cols = {"Id","Name","Email","Phone","Age","City"};
        String [][] data = new String[employees.size()][6];
        
        
        for(int i = 0 ; i<employees.size(); i++) {
        	data[i][0] = employees.get(i).getId()+"";
        	data[i][1] = employees.get(i).getName();
        	data[i][2] = employees.get(i).getEmail();
        	data[i][3] = employees.get(i).getPhone()+"";
        	data[i][4] = employees.get(i).getAge()+"";
        	data[i][5] = employees.get(i).getCity();
        	
        }
        DefaultTableModel model = new DefaultTableModel(data,cols);
        employeeTable.setModel(model);
        
    }
    
    public void resetData(){
        nameTextField.setText("");
        ageTextField.setText("");
        phoneTextField.setText("");
        cityTextField.setText("");
        emailTextField.setText("");
    }

}
